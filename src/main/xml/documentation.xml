<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright © 2012 http://io7m.com

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted, provided that the above
  copyright notice and this permission notice appear in all copies.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  -->

<s:document
  xmlns:s="http://www.io7m.com/schemas/structural/1.0.0"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <s:document-title>io7m-jlog 2.2.0 Documentation</s:document-title>
  <s:document-style>documentation.css</s:document-style>
  <s:document-contents/>

  <s:part>
    <s:part-title>Package Information</s:part-title>
    <s:part-contents />

    <s:section>
      <s:section-title>Orientation</s:section-title>
      <s:subsection>
        <s:subsection-title>Overview</s:subsection-title>
        <s:paragraph>
          The <s:term type="package">jlog</s:term> package provides a
          simple API for configurable program logging.
        </s:paragraph>
        <s:paragraph>
          The API exposed to the programmer essentially has the programmer build
          an (implicit) tree of log outputs and pass one output to each relevant program
          component. The leaves/branches of the tree can be individually
          enabled/disabled at runtime from a simple Java
          <s:link-external target="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Properties.html">properties</s:link-external>
          file. This allows the programmer to specify exactly which
          debugging messages they require at any given time, preventing
          the typical flood of messages when setting high verbosity levels
          for traditional UNIX programs.
        </s:paragraph>
      </s:subsection>
      <s:subsection>
        <s:subsection-title>Simplicity</s:subsection-title>
        <s:paragraph>
          The entire library consists of around 700 lines of pure Java,
          and includes selectable log levels and precise control over logging
          from program components. All non-essential "logging" features
          are rejected: No timestamps, no automatic log rotation, no
          logging to databases or mail systems - all of these features should
          be provided by external programs.
        </s:paragraph>
      </s:subsection>
    </s:section>

    <s:section>
      <s:section-title>Installation</s:section-title>
      <s:subsection>
        <s:subsection-title>Source compilation</s:subsection-title>
        <s:paragraph>
          The project can be compiled and installed with
          <s:link-external target="http://maven.apache.org">Maven</s:link-external>:
        </s:paragraph>
        <s:paragraph>
          <s:verbatim type="example"><![CDATA[$ mvn -C clean install]]></s:verbatim>
        </s:paragraph>
      </s:subsection>
      <s:subsection>
        <s:subsection-title>Maven</s:subsection-title>
        <s:paragraph>
          Regular releases are made to the
          <s:link-external target="http://search.maven.org/#search|ga|1|io7m-jlog">Central Repository</s:link-external>,
          so it's possible to use the <s:term type="package">jlog</s:term>
          package in your projects with the following Maven dependency:
        </s:paragraph>
        <s:paragraph>
          <s:verbatim type="example"><![CDATA[<dependency>
  <groupId>com.io7m.jlog</groupId>
  <artifactId>io7m-jlog</artifactId>
  <version>2.2.0</version>
</dependency>]]></s:verbatim>
        </s:paragraph>
      </s:subsection>
    </s:section>

    <s:section>
      <s:section-title>Supported Systems</s:section-title>
      <s:paragraph>
        This release of the software is known to pass 100% of the included
        unit tests on the following platforms:
      </s:paragraph>
        <s:formal-item kind="platform_table" type="platforms">
          <s:formal-item-title>Supported systems</s:formal-item-title>
          <s:table>
            <s:table-summary>Supported systems</s:table-summary>
            <s:table-head>
              <s:table-column-name>OS</s:table-column-name>
              <s:table-column-name>OS-Version</s:table-column-name>
              <s:table-column-name>OS-Arch</s:table-column-name>
              <s:table-column-name>JDK-Vendor</s:table-column-name>
              <s:table-column-name>JDK-Version</s:table-column-name>
              <s:table-column-name>VM</s:table-column-name>
              <s:table-column-name>VM-Version</s:table-column-name>
            </s:table-head>
            <s:table-body>
              <s:table-row>
                <s:table-cell>Linux</s:table-cell>
                <s:table-cell>3.4.2-2-ARCH</s:table-cell>
                <s:table-cell>x86_64</s:table-cell>
                <s:table-cell>Sun Microsystems Inc.</s:table-cell>
                <s:table-cell>1.6.0_24</s:table-cell>
                <s:table-cell>OpenJDK 64-Bit Server VM</s:table-cell>
                <s:table-cell>20.0-b12</s:table-cell>
              </s:table-row>
              <s:table-row>
                <s:table-cell>SunOS</s:table-cell>
                <s:table-cell>5.11 snv_151a</s:table-cell>
                <s:table-cell>x86</s:table-cell>
                <s:table-cell>Sun Microsystems Inc.</s:table-cell>
                <s:table-cell>1.6.0_21</s:table-cell>
                <s:table-cell>Java HotSpot(TM) Client VM</s:table-cell>
                <s:table-cell>17.0-b16</s:table-cell>
              </s:table-row>
              <s:table-row>
                <s:table-cell>Windows XP</s:table-cell>
                <s:table-cell>5.1</s:table-cell>
                <s:table-cell>x86</s:table-cell>
                <s:table-cell>Sun Microsystems Inc.</s:table-cell>
                <s:table-cell>1.7.0_02-b13</s:table-cell>
                <s:table-cell>Java HotSpot(TM) Client VM</s:table-cell>
                <s:table-cell>22.0-b10</s:table-cell>
              </s:table-row>
              <s:table-row>
                <s:table-cell>FreeBSD</s:table-cell>
                <s:table-cell>8.2-RELEASE-p3</s:table-cell>
                <s:table-cell>x86_64</s:table-cell>
                <s:table-cell>Sun Microsystems Inc.</s:table-cell>
                <s:table-cell>1.6.0_32</s:table-cell>
                <s:table-cell>OpenJDK 64-Bit Server VM</s:table-cell>
                <s:table-cell>20.0-b12</s:table-cell>
              </s:table-row>
              <s:table-row>
                <s:table-cell>Mac OS X</s:table-cell>
                <s:table-cell>10.6.8</s:table-cell>
                <s:table-cell>x86_64</s:table-cell>
                <s:table-cell>Apple Inc.</s:table-cell>
                <s:table-cell>1.6.0_31</s:table-cell>
                <s:table-cell>Java HotSpot(TM) 64-Bit Server VM</s:table-cell>
                <s:table-cell>20.6-b01-413</s:table-cell>
              </s:table-row>
            </s:table-body>
          </s:table>
        </s:formal-item>
    </s:section>

    <s:section>
      <s:section-title>Platform Specific Issues</s:section-title>
      <s:paragraph>
        There are currently no known platform-specific issues.
      </s:paragraph>
    </s:section>

    <s:section>
      <s:section-title>License</s:section-title>
      <s:paragraph>
        All files distributed with the <s:term type="package">jlog</s:term>
        package are placed under the following license:
        <s:verbatim type="license"><![CDATA[Copyright © 2012 http://io7m.com

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.]]>
        </s:verbatim>
      </s:paragraph>
    </s:section>
  </s:part>

  <s:part>
    <s:part-title>Tutorial</s:part-title>
    <s:part-contents/>
    <s:section>
      <s:section-title>Tutorial</s:section-title>
      <s:paragraph>
        The <s:term type="package">jlog</s:term> package provides 
        a simple logging API, configured via Java properties.
      </s:paragraph>
      <s:paragraph>
        First, the root log output is created by passing a value
        of type <s:term type="type">Properties</s:term>, a string
        denoting a property prefix, and a name:
      </s:paragraph>
      <s:formal-item kind="example">
        <s:formal-item-title>Log initialization</s:formal-item-title>
        <s:verbatim><![CDATA[
final Properties p  = PropertyUtils.loadFromFile("example.properties");
final Log root = new Log(p, "com.example", "main");]]>
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        The prefix string <s:term type="constant">"com.example"</s:term>
        passed to the initial log output tells the package that it should
        attempt to load configuration information from keys starting with
        <s:term type="constant">"com.example"</s:term>.
      </s:paragraph>
      <s:paragraph>
        The name passed to the <s:term type="function">Log</s:term>
        names the root node. By convention, this is the name of the
        application or library.
      </s:paragraph>
      <s:paragraph>
        It is then possible to create child <s:term type="function">Log</s:term>
        outputs and pass them to individual program components:
      </s:paragraph>
      <s:formal-item kind="example">
        <s:formal-item-title>Component logs</s:formal-item-title>
        <s:verbatim><![CDATA[
final Log input_log = new Log(root, "input");
final Log render_log = new Log(root, "renderer");
final Log audio_log = new Log(root, "audio");

final Renderer r = new Renderer(render_log);
...]]>
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        Given an appropriate configuration file, logging can be enabled
        and disabled for specific components.
      </s:paragraph>
      <s:formal-item kind="example">
        <s:formal-item-title>Configuration file</s:formal-item-title>
        <s:verbatim><![CDATA[     
com.example.level           = LOG_DEBUG
com.example.logs.main       = true
com.example.logs.main.audio = false
com.example.logs.main.video = true
com.example.logs.main.input = false]]>
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        Note that enabling or disabling a log output affects all child
        outputs. In the above config file,
        <s:term type="constant">com.example.logs.main.video = true</s:term>
        is redundant as <s:term type="constant">com.example.logs.main</s:term>
        is enabled.
      </s:paragraph>
      <s:paragraph>
        As shown by the above config file, it's also possible to specify
        a threshold for log message priority. In the above config, all
        messages equal to or greater than
        <s:term type="constant">LOG_DEBUG</s:term> priority will be logged.
        It is not currently possible to specify per-log priority thresholds.
      </s:paragraph>
    </s:section>
  </s:part>

  <s:part>
    <s:part-title>API Reference</s:part-title>
    <s:part-contents/>
    <s:section>
      <s:section-title>Javadoc</s:section-title>
      <s:paragraph>
        API documentation for the package is provided via the
        included <s:link-external target="javadoc">Javadoc</s:link-external>.
      </s:paragraph>
    </s:section>
  </s:part>

</s:document>
